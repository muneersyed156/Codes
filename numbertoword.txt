def int_to_en(num):
    d = { 0 : 'zero', 1 : 'one', 2 : 'two', 3 : 'three', 4 : 'four', 5 : 'five',
          6 : 'six', 7 : 'seven', 8 : 'eight', 9 : 'nine', 10 : 'ten',
          11 : 'eleven', 12 : 'twelve', 13 : 'thirteen', 14 : 'fourteen',
          15 : 'fifteen', 16 : 'sixteen', 17 : 'seventeen', 18 : 'eighteen',
          19 : 'nineteen', 20 : 'twenty',
          30 : 'thirty', 40 : 'forty', 50 : 'fifty', 60 : 'sixty',
          70 : 'seventy', 80 : 'eighty', 90 : 'ninety' }
    k = 1000
    m = k * 1000
    b = m * 1000
    t = b * 1000

    assert(0 <= num)

    if (num < 20):
        return d[num]

    if (num < 100):
        if num % 10 == 0: return d[num]
        else: return d[num // 10 * 10] + ' ' + d[num % 10]

    if (num < k):
        if num % 100 == 0: return d[num // 100] + ' hundred'
        else: return d[num // 100] + ' hundred ' + int_to_en(num % 100)

    if (num < m):
        if num % k == 0: return int_to_en(num // k) + ' thousand'
        else: return int_to_en(num // k) + ' thousand, ' + int_to_en(num % k)

a=list(map(int,input().split()))
d=[]
if(a[0]!=a[1]):
    while(1):
        a.sort()
        b=[]
        b.append(int_to_en(a[0]))
        b.append(int_to_en(a[1]))
        k=[[a[0],b[0]],[a[1],b[1]]]
        k.sort(key=lambda x:x[1],reverse=False)
        d=[k[0][0],k[1][0]]
        if(a[0]==a[1] and a[1]==d[0] and d[1]==d[0]):
            print(a[0],end='')
            break
        else:
            a=[a[0]+d[0],a[1]+d[1]]
        if(a[0]>=99999):
            print("Out of bounds\n")
            break
else:
    print(a[0],end='')